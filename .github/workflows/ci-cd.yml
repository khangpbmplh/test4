name: CI/CD Pipeline

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Enable manual trigger from the GitHub Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  SKIP_PREFLIGHT_CHECK: true
  TSC_COMPILE_ON_ERROR: true
  ESLINT_NO_DEV_ERRORS: true
  CI: false

jobs:
  build-and-test:
    name: 🔨 Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run linting
      run: npm run lint
      continue-on-error: true
      
    - name: 🧪 Run tests
      run: npm test -- --watchAll=false --passWithNoTests
      
    - name: 📊 Generate test coverage report
      run: npm test -- --watchAll=false --coverage --passWithNoTests
      
    - name: 📝 Save test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: coverage/
        
    - name: 🔨 Build
      run: npm run build:prod
      
    - name: 📝 Create 404.html for SPA routing
      run: cp build/index.html build/404.html
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build
      
  docker-build:
    name: 🐳 Build and Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 🏷️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: 🔨 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/todo-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/todo-app:buildcache,mode=max
        
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    name: 🚀 Deploy
    needs: build-and-test
    runs-on: ubuntu-latest
    # Only deploy on push to main/master, not on pull requests
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 